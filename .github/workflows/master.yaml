name: Build binary
'on':
  push:
    branches:
      - '**'
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: clone main repository
        uses: actions/checkout@v2
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
#      - uses: actions/checkout@v2
#        with:
#          path: mintbase-near-indexer
#          repository: Mintbase/mintbase-near-indexer
#          token: ${{ secrets.GH_TOKEN }}
##          ssh-key: ${{ secrets.MINTBASE_NEAR_INDEXER_DEPLOY_KEY }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: test-deploy-contracts
#      - name: run indexer
#        run: ls -lah && cargo indexer
#      - uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.TESTNET_IP }}
#          username: ${{ secrets.VM_USER }}
#          password: ${{ secrets.VM_PASS }}
#          source: "./indexer"
#          target: "/app"
#      - uses: garygrossgarten/github-action-ssh@release
#        with:
#          host: ${{ secrets.TESTNET_IP }}
#          username: ${{ secrets.VM_USER }}
#          password: ${{ secrets.VM_PASS }}
#          command: |
#            cd /app;
#            pi=$(pgrep -f mintbase-near-indexer);
#            po=11;
#            echo '"$po yo"';
#            echo '5 */6 * * * bash -c "exec -a mintbase-near-indexer NETWORK=${{secrets.TESTNET}} POSTGRES=postgres://${{secrets.POSTGRES_USER}}:${{secrets.POSTGRES_PASS}}@localhost:5432/mintlivebase WATCH_ACCOUNTS=test ./indexer --home-dir /home/admin/.near/testnet runa; 2> /app/error.log 1> /app/out.log"' >> mycron;
#            echo '0 */6 * * * pkill "$pi";' >> mycron;
#            echo '* * * * * bash -c "exec -a mintbase-near-indexer /app/run.sh 2> /app/error.log 1> /app/out.log"' >> mycron;
#            echo '*/2 * * * * pkill "$pi"' >> mycron;
#
#            crontab mycron;
#            rm mycron;


